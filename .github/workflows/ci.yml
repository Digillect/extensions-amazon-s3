name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - 'feature/**'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.201'

      - name: Dotnet information
        run: dotnet --info

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: version
        uses: gittools/actions/gitversion/execute@v0.9.15
        with:
          useConfigFile: true

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: >
          dotnet build --no-restore -c Release
          /p:Version="${{steps.version.outputs.MajorMinorPatch}}"
          /p:AssemblyVersion="${{steps.version.outputs.AssemblySemVer}}"
          /p:AssemblyFileVersion="${{steps.version.outputs.AssemblySemFileVer}}"
          /p:InformationalVersion="${{steps.version.outputs.InformationalVersion}}"

      - name: Test
        continue-on-error: true
        run: dotnet test --no-build -c Release --logger trx --results-directory "./artifacts"

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: verify-test-results
          path: |
            **/*.received.*

      - name: Process test reports
        uses: im-open/process-dotnet-test-results@v2.2.5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          base-directory: './artifacts'

      - name: Package
        run: dotnet pack --no-build -c Release -o artifacts /p:Version="${{ steps.version.outputs.FullSemVer }}"

      - name: Upload package to MyGet
        if: startsWith(steps.version.outputs.PreReleaseLabel, 'rc-') || startsWith(steps.version.outputs.PreReleaseLabel, 'preview-')
        run: dotnet nuget push "*.nupkg" -k ${{ secrets.MYGET_API_KEY }} -s https://www.myget.org/F/digillect/api/v3/index.json
        working-directory: artifacts

      - name: Upload package to NuGet
        if: steps.version.outputs.PreReleaseTag == ''
        run: dotnet nuget push "*.nupkg" -k ${{ secrets.NUGET_API_KEY }} -s https://api.nuget.org/v3/index.json
        working-directory: artifacts
